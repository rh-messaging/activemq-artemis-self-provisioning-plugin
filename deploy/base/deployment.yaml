apiVersion: apps/v1
kind: Deployment
metadata:
  name: activemq-artemis-self-provisioning-plugin
  labels:
    app: activemq-artemis-self-provisioning-plugin
    app.kubernetes.io/component: activemq-artemis-self-provisioning-plugin
    app.kubernetes.io/instance: activemq-artemis-self-provisioning-plugin
    app.kubernetes.io/part-of: activemq-artemis-self-provisioning-plugin
    app.openshift.io/runtime-namespace: activemq-artemis-self-provisioning-plugin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: activemq-artemis-self-provisioning-plugin
  template:
    metadata:
      labels:
        app: activemq-artemis-self-provisioning-plugin
    spec:
      containers:
        - name: activemq-artemis-self-provisioning-plugin
          image: registry.redhat.io/amq-broker-7/amq-broker-713-self-provisioning-plugin-rhel9@sha256:ee1ac8587bcc56766565a05110febafffd3b8bc0940eaac38407829d7f501685
          ports:
            - containerPort: 9443
              protocol: TCP
          args: [ "-g", "daemon off;"]
          command:
          - nginx
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - name: plugin-serving-cert
              readOnly: true
              mountPath: /var/serving-cert
            - name: nginx-conf
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: plugin-serving-cert
          secret:
            secretName: plugin-serving-cert
            defaultMode: 420
        - name: nginx-conf
          configMap:
            name: nginx-conf
            defaultMode: 420
      restartPolicy: Always
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
